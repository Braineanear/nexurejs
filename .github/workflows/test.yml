name: Test

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test:
    name: Test on ${{ matrix.os }} with Node ${{ matrix.node-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false  # Continue with other tests even if one fails
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install build tools (Windows)
        if: runner.os == 'Windows'
        run: |
          npm install --global --production windows-build-tools
          npm install --global node-gyp
        shell: powershell

      - name: Install build tools (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential python3

      - name: Build project
        run: npm run build

      - name: Build native modules
        run: npm run build:native:test
        env:
          CXXFLAGS: "-std=c++17"  # Ensure C++17 is used

      - name: Run tests
        run: npm test

      - name: Upload build artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: build-logs-${{ matrix.os }}-node-${{ matrix.node-version }}
          path: |
            build/
            *.log
            npm-debug.log*
